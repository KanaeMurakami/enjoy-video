# need_designラベルが追加された場合にデザインIssueを自動作成する
name: Create Design Issue

on:
  issues:
    types: [labeled]

permissions:
  issues: write
  contents: read

jobs:
  create-design-issue:
    # need_designラベルが追加された場合のみ実行
    if: github.event.label.name == 'need_design'
    runs-on: ubuntu-latest

    steps:
    - name: Create Design Issue
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issueNumber = context.issue.number;

          // 元のIssueの情報を取得
          const originalIssue = await github.rest.issues.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber
          });

          // 既存のデザインIssueをチェック
          const existingIssues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: 'design',
            state: 'all'
          });

          // 既に対応するデザインIssueが存在するかチェック
          const expectedTitle = 'D_' + originalIssue.data.title;
          const existingDesignIssue = existingIssues.data.find(issue =>
            issue.title === expectedTitle
          );
          let designIssueNumber;

          if (existingDesignIssue) {
            designIssueNumber = existingDesignIssue.number;
            console.log('Design issue already exists: #' + designIssueNumber + ' for issue #' + issueNumber);
          } else {
            // デザインIssueの内容を作成
            const issueBody = '# 概要\n\n<!-- 何をデザインするのか、簡潔に記載してください -->\n\n## 開発Issue\n\n- 元Issue: #' + issueNumber + '\n- 作成者: @' + originalIssue.data.user.login + '\n\n# 関連URL\n\n<!-- 関連するデザインガイドライン、参考サイト、既存のコンポーネントなどを記載 -->\n\n# 成果物\n\n<!-- Figmaファイルや画像ファイルのURLを記載 -->\n\n- [ ] Figma URL:';

            // デザインIssueを作成
            const newIssue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'D_' + originalIssue.data.title,
              body: issueBody,
              labels: ['design'],
              assignees: [originalIssue.data.user.login]
            });
            designIssueNumber = newIssue.data.number;

            console.log('Created design issue #' + designIssueNumber + ' for issue #' + issueNumber);
          }

          // 元のIssueの ${デザインIssue番号} プレースホルダーを実際の番号に置換
          let updatedBody = originalIssue.data.body || '';

          // ${デザインIssue番号} プレースホルダーを実際の番号に置換
          if (updatedBody.includes('${デザインIssue番号}')) {
            updatedBody = updatedBody.replace('${デザインIssue番号}', '#' + designIssueNumber);

            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: updatedBody
            });
          }

          // 元のIssueにコメントも追加
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: '- デザインIssue: #' + designIssueNumber
          });
